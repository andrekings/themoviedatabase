{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/movie-details/movie-details.component.ts","./src/app/movie-details/movie-details.component.html","./src/app/movies/movies.component.ts","./src/app/movies/movies.component.html","./src/app/services/movie-db.service.ts","./src/app/services/sw.service.ts","./src/app/shared/filter/filter.component.ts","./src/app/shared/filter/filter.component.html","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/shared.module.ts","./src/app/shared/social-share/social-share.component.ts","./src/app/shared/social-share/social-share.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\r\nimport { MoviesComponent } from './movies/movies.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: MoviesComponent },\r\n  { path: 'movies', component: MoviesComponent },\r\n  { path: 'movie/:id', component: MovieDetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = `The Movie Database`;\r\n  themeName = 'indigo';\r\n  constructor() { }\r\n  changeTheme(color) {\r\n    this.themeName = color;\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","<mat-sidenav-container fullscreen\r\n                       [ngClass]=\"themeName\">\r\n  <mat-toolbar color=\"primary\"\r\n               class=\"fixed-header\"\r\n               role=\"toolbar\">\r\n    <button mat-icon-button\r\n            (click)=\"sideNav.open()\"\r\n            role=\"button\"\r\n            aria-label=\"menu\">\r\n      <mat-icon>view_headline</mat-icon>\r\n    </button>\r\n    <h3 [routerLink]=\"['/movies']\">{{ title }}</h3>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav #sideNav\r\n               class=\"height\">\r\n    <mat-list>\r\n      <a role=\"link\"\r\n         mat-list-item\r\n         [routerLink]=\"['/movies']\"\r\n         (click)=\"sideNav.close()\">Movies</a>\r\n    </mat-list>\r\n  </mat-sidenav>\r\n\r\n  <router-outlet></router-outlet>\r\n</mat-sidenav-container>","import { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  BrowserModule,\r\n  HAMMER_GESTURE_CONFIG,\r\n  HammerGestureConfig,\r\n} from '@angular/platform-browser';\r\nimport { environment } from '../environments/environment';\r\nimport { FilterComponent } from './shared/filter/filter.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MovieDBService } from './services/movie-db.service';\r\nimport {\r\n  MovieDetailsComponent,\r\n  TrailerDialogComponent,\r\n} from './movie-details/movie-details.component';\r\nimport { MoviesComponent } from './movies/movies.component';\r\nimport { NgModule, Injectable } from '@angular/core';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SwService } from './services/sw.service';\r\nimport { SocialShareComponent } from './shared/social-share/social-share.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\n@Injectable()\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pinch: { enable: false },\r\n    rotate: { enable: false },\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MovieDetailsComponent,\r\n    TrailerDialogComponent,\r\n    SocialShareComponent,\r\n    MoviesComponent,\r\n    FilterComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    ServiceWorkerModule.register('/themoviedatabase/ngsw-worker.js', {\r\n      enabled: environment.production,\r\n    }),\r\n  ],\r\n  providers: [\r\n    { provide: HAMMER_GESTURE_CONFIG, useClass: MyHammerConfig },\r\n    MovieDBService,\r\n    SwService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [TrailerDialogComponent, SocialShareComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DomSanitizer, Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'environments/environment';\r\nimport { Location } from '@angular/common';\r\nimport { MovieDBService } from '../services/movie-db.service';\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrls: ['./movie-details.component.scss']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n  movieId: string;\r\n  movie: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dbService: MovieDBService,\r\n    public dialog: MatDialog,\r\n    public domSanitizer: DomSanitizer,\r\n    private titleService: Title,\r\n    private location: Location,\r\n    private router: Router\r\n  ) {\r\n    this.domSanitizer = domSanitizer;\r\n    this.route.params.subscribe(params => {\r\n      this.movieId = params['id'];\r\n      this.getMovieDetails(this.movieId);\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  getMovieDetails(id) {\r\n    this.dbService.getMovieDetails(id).subscribe((res: any) => {\r\n      this.movie = res;\r\n      this.getCast();\r\n      this.titleService.setTitle(res.title);\r\n      this.movie.poster_path = `${environment.imgUrl}${this.movie.poster_path}`;\r\n      this.movie.backdrop_path = `https://image.tmdb.org/t/p/original${this.movie.backdrop_path\r\n        }`;\r\n    });\r\n  }\r\n\r\n  goToMovieDetails(movie) {\r\n    this.router.navigate(['/movie', movie.id]);\r\n  }\r\n\r\n  getCast() {\r\n    this.dbService.getCastMovie(this.movieId).subscribe(res => {\r\n      this.movie.cast = res['cast'].slice(0, 10).map(cast => {\r\n        cast.imgUrl = `${environment.imgUrl}${cast.profile_path}`;\r\n        return cast;\r\n      });\r\n    });\r\n  }\r\n\r\n  getMovieVideos(): void {\r\n    if (this.movie.videos && this.movie.videos.length) {\r\n      return;\r\n    }\r\n\r\n    this.dbService.getMovieVideos(this.movieId).subscribe((res: any) => {\r\n      this.movie.videos = res.results.map(video => {\r\n        video.imgUrl = `https://img.youtube.com/vi/${video.key}/0.jpg`;\r\n        video.url = `https://www.youtube.com/watch?v=${video.key}`;\r\n        return video;\r\n      });\r\n    });\r\n  }\r\n\r\n  getMovieReviews(): void {\r\n    if (this.movie.reviews && this.movie.reviews.length) {\r\n      return;\r\n    }\r\n\r\n    this.dbService.getMovieReviews(this.movieId).subscribe((res: any) => {\r\n      this.movie.reviews = res.results || [];\r\n    });\r\n  }\r\n\r\n  similarMovies(): any {\r\n    if (this.movie.similarMovies && this.movie.similarMovies.length) {\r\n      return;\r\n    }\r\n    if (this.movieId) {\r\n      this.dbService.getSimilarMovies(this.movieId).subscribe((res: any) => {\r\n        this.movie.similarMovies = this.dbService.formatMovies(res.results);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectChange(event: number) {\r\n    if (event === 1) {\r\n      this.getMovieVideos();\r\n    } else if (event === 2) {\r\n      this.getMovieReviews();\r\n    } else if (event === 3) {\r\n      this.similarMovies();\r\n    }\r\n  }\r\n\r\n  openDialog(video) {\r\n    const videoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n      `https://www.youtube.com/embed/${video.key}?autoplay=1`\r\n    );\r\n    const dialogRef = this.dialog.open(TrailerDialogComponent, {\r\n      data: { videoUrl: videoUrl }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'trailer-modal-dialog',\r\n  templateUrl: './TrailerDialogModal.html',\r\n  styles: [\r\n    `\r\n      .close-button {\r\n        position: absolute;\r\n        top: -30px;\r\n        right: -24px;\r\n        padding: 0;\r\n        min-width: 40px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class TrailerDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TrailerDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n}\r\n","<div>\r\n  <mat-progress-bar *ngIf=\"!movie\"\r\n                    color=\"primary\"\r\n                    mode=\"indeterminate\">\r\n  </mat-progress-bar>\r\n  <div *ngIf=\"movie\"\r\n       class=\"movie-expo\"\r\n       [style.background-image]=\"'url(' + movie.backdrop_path + ')'\">\r\n    <div class=\"movie-head\">\r\n      <h2 class=\"mat-h2\">\r\n        <button mat-icon-button\r\n                class=\"btn-back\"\r\n                (click)=\"back()\"\r\n                aria-label=\"back\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        {{ movie.title }}\r\n      </h2>\r\n      <p class=\"movie-info\">\r\n        <mat-icon>date_range</mat-icon> {{ movie.release_date | date: \"y\" }} •\r\n        <mat-icon>timer</mat-icon> {{ movie.runtime }} minutes •\r\n        <mat-icon [ngClass]=\"{\r\n            'mat-green': movie.vote_average >= 5,\r\n            'mat-red': movie.vote_average < 5\r\n          }\">star</mat-icon>\r\n        {{ movie.vote_average }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"movie\"\r\n       class=\"movie-details\">\r\n    <mat-tab-group (selectedIndexChange)=\"selectChange($event)\">\r\n      <mat-tab label=\"Details\">\r\n        <p>{{ movie.overview }}</p>\r\n\r\n        <mat-chip-list>\r\n          <mat-chip *ngFor=\"let genre of movie.genres\">{{\r\n            genre.name\r\n            }}</mat-chip>\r\n        </mat-chip-list>\r\n        <h4>Estrelando</h4>\r\n        <mat-card class=\"cast-list\"\r\n                  *ngFor=\"let cast of movie.cast\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar\r\n                 [style.background-image]=\"'url(' + cast.imgUrl + ')'\"\r\n                 class=\"cast-header-image\"></div>\r\n            <mat-card-title>{{ cast.name }}</mat-card-title>\r\n            <mat-card-subtitle>{{ cast.character }}</mat-card-subtitle>\r\n          </mat-card-header>\r\n        </mat-card>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'environments/environment';\r\nimport { MovieDBService } from '../services/movie-db.service';\r\n\r\n@Component({\r\n  selector: 'app-movies',\r\n  templateUrl: './movies.component.html',\r\n  styleUrls: ['./movies.component.scss'],\r\n})\r\nexport class MoviesComponent implements OnInit {\r\n  itemList: any;\r\n  defaultImage = environment.placeholderImg;\r\n  options = { page: 1 };\r\n  pager = { currentPage: 1, totalPages: 0 };\r\n  isLoading = false;\r\n  constructor(\r\n    private titleService: Title,\r\n    public DBService: MovieDBService,\r\n    private router: Router,\r\n  ) {\r\n    this.getDiscover(this.options);\r\n    this.titleService.setTitle('Discover New Movies');\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  getDiscover(options) {\r\n    if (this.isLoading) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.DBService.getDiscover('movie', options).subscribe(\r\n      (res: any) => {\r\n        this.pager.totalPages = res.total_pages;\r\n        this.isLoading = false;\r\n        this.itemList = this.DBService.formatMovies(res.results);\r\n        setTimeout(() => {\r\n          window.scrollTo(0, 0);\r\n        }, 1000);\r\n      },\r\n      (error) => {\r\n        this.isLoading = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  changeSelection(options) {\r\n    this.pager.currentPage = 1;\r\n    options.page = 1;\r\n    this.getDiscover(options);\r\n  }\r\n\r\n  like(e, movie) {\r\n    e.stopPropagation();\r\n    alert(movie.title);\r\n  }\r\n\r\n  goToMovieDetails(movie) {\r\n    this.router.navigate(['/movie', movie.id]);\r\n  }\r\n\r\n  changePage(pageno) {\r\n    this.pager.currentPage = pageno;\r\n    this.options.page = pageno;\r\n    this.getDiscover(this.options);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2>Descubra novos filmes aqui</h2>\r\n\r\n  <app-filter (filterChange)=\"changeSelection($event)\"></app-filter>\r\n</div>\r\n\r\n<div class=\"main-content\">\r\n  <mat-progress-spinner color=\"primary\"\r\n                        mode=\"indeterminate\"\r\n                        *ngIf=\"isLoading\">\r\n  </mat-progress-spinner>\r\n  <mat-card class=\"example-card\"\r\n            *ngFor=\"let movie of itemList\"\r\n            (click)=\"goToMovieDetails(movie)\">\r\n    <img mat-card-image\r\n         [src]=\"movie.backdrop_path\"\r\n         class=\"card-img\"\r\n         [alt]=\"movie.title\" />\r\n    <mat-card-content>\r\n      <h3 class=\"ellipsis\">{{ movie.title }}</h3>\r\n      <p>\r\n        {{ movie.overview }}\r\n      </p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n<div class=\"clearfix\">\r\n  <app-footer [pager]=\"pager\"\r\n              (changePage)=\"changePage($event)\"></app-footer>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\n\r\nexport class MovieDBService {\r\n  API_BASE = environment.API_BASE;\r\n  API_KEY = environment.API_KEY;\r\n  body: any;\r\n  err: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  formatParams(options) {\r\n    let params = new HttpParams()\r\n      .set('api_key', this.API_KEY)\r\n      .set('language', 'pt-BR');\r\n\r\n    if (options) {\r\n      Object.keys(options).forEach(function (key) {\r\n        params = params.append(key, options[key]);\r\n      });\r\n    }\r\n    return { params };\r\n  }\r\n  sortByList(): Array<any> {\r\n    return [\r\n      { key: 'popularity.desc', value: 'Popularity Descending' },\r\n      { key: 'popularity.asc', value: 'Popularity Ascending' },\r\n      { key: 'vote_count.asc', value: 'Rating Ascending' },\r\n      { key: 'vote_count.desc', value: 'Rating Descending' },\r\n      { key: 'primary_release_date.desc', value: 'Release Date Descending' },\r\n      { key: 'primary_release_date.asc', value: 'Release Date Ascending' }\r\n    ];\r\n  }\r\n\r\n  getYears(): Array<number> {\r\n    const year = new Date().getFullYear();\r\n    const yearList = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      yearList.push(year - i);\r\n    }\r\n    return yearList;\r\n  }\r\n\r\n  getMovies(type): Observable<Response> {\r\n    type = type || 'popular';\r\n    return this.http\r\n      .get(`${this.API_BASE}movie/${type}`, this.formatParams({}))\r\n      .pipe(\r\n        map((res: Response) => res),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMovieDetails(movieId): Observable<Response> {\r\n    const movieDetilasUrl = `${this.API_BASE}movie/${movieId}`;\r\n    return this.http.get(movieDetilasUrl, this.formatParams({})).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getMovieVideos(movieId): Observable<Response> {\r\n    const movieTrailersUrl = `${this.API_BASE}movie/${movieId}/videos`;\r\n    return this.http.get(movieTrailersUrl, this.formatParams({})).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getMovieReviews(movieId): Observable<Response> {\r\n    const movieReviewUrl = `${this.API_BASE}movie/${movieId}/reviews`;\r\n    return this.http.get(movieReviewUrl, this.formatParams({})).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getGenres(): Observable<Response> {\r\n    const generesUrl = `${this.API_BASE}genre/movie/list`;\r\n    return this.http.get(generesUrl, this.formatParams({})).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getkeywords(val): Observable<Response> {\r\n    const generesUrl = `${this.API_BASE}search/keyword?api_key=${this.API_KEY\r\n      }&query=${val}&page=1`;\r\n\r\n    return this.http.get(generesUrl).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  formatMovies(items) {\r\n    const placeholderImg = environment.placeholderImg;\r\n    const imgUrl = environment.imgUrl;\r\n    return items.map(item => {\r\n      if (item) {\r\n        item.poster_path = item.poster_path\r\n          ? `${imgUrl}${item.poster_path}`\r\n          : placeholderImg;\r\n        item.backdrop_path = item.backdrop_path\r\n          ? `${imgUrl}${item.backdrop_path}`\r\n          : placeholderImg;\r\n        item.overview = item.overview.substr(0, 100) + '...';\r\n        return item;\r\n      }\r\n    });\r\n  }\r\n\r\n  getSimilarMovies(movie_id): Observable<Response> {\r\n    const similarMovieUrl = `${this.API_BASE}movie/${movie_id}/similar`;\r\n    return this.http.get(similarMovieUrl, this.formatParams({})).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getCastMovie(movie_id): Observable<Response> {\r\n    const castUrl = `${this.API_BASE}movie/${movie_id}/credits?api_key=${this.API_KEY\r\n      }`;\r\n    return this.http.get(castUrl).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getDiscover(type, options): Observable<Response> {\r\n    // options.api_key = this.API_KEY;\r\n    const discoverUrl = `${this.API_BASE}discover/${type}`;\r\n    return this.http.get(discoverUrl, this.formatParams(options)).pipe(\r\n      map((res: Response) => res),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: Response | any) {\r\n    // In a real world app, you might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      this.body = error || '';\r\n      this.err = this.body.error || JSON.stringify(this.body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${this.err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { SwUpdate } from '@angular/service-worker';\r\n\r\nfunction promptUser(event): boolean {\r\n  return true;\r\n}\r\n\r\n@Injectable()\r\nexport class SwService {\r\n  constructor(updates: SwUpdate) {\r\n    // log sw updates\r\n    updates.available.subscribe(event => {\r\n      console.log('current version is', event.current);\r\n      console.log('available version is', event.available);\r\n    });\r\n    updates.activated.subscribe(event => {\r\n      console.log('old version was', event.previous);\r\n      console.log('new version is', event.current);\r\n    });\r\n\r\n    // check for updates\r\n    interval(6 * 60 * 60).subscribe(() => updates.checkForUpdate());\r\n\r\n    // reload the app after updates\r\n    updates.available.subscribe(event => {\r\n      if (promptUser(event)) {\r\n        updates.activateUpdate().then(() => document.location.reload());\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MovieDBService } from '../../services/movie-db.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  @Output() filterChange = new EventEmitter<any>();\r\n  options: any;\r\n  yearsList: Number[];\r\n  sortByList: any;\r\n  genresList: any;\r\n\r\n  constructor(public DBService: MovieDBService) {\r\n    this.DBService.getGenres().subscribe(\r\n      (res: any) => (this.genresList = res.genres)\r\n    );\r\n    this.options = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.yearsList = this.DBService.getYears();\r\n    this.sortByList = this.DBService.sortByList();\r\n  }\r\n\r\n  changeSelection() {\r\n    this.filterChange.emit(this.options);\r\n  }\r\n}\r\n","<div class=\"discover-filters\">\r\n  <mat-form-field role=\"form\">\r\n    <mat-select role=\"list\"\r\n                [(ngModel)]=\"options.primary_release_year\"\r\n                placeholder=\"Ano\"\r\n                (selectionChange)=\"changeSelection()\">\r\n      <mat-option role=\"option\"\r\n                  *ngFor=\"let year of yearsList\"\r\n                  [value]=\"year\">{{year}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-select role=\"list\"\r\n                [(ngModel)]=\"options.sort_by\"\r\n                placeholder=\"Classificação\"\r\n                (selectionChange)=\"changeSelection()\">\r\n      <mat-option role=\"option\"\r\n                  *ngFor=\"let sort of sortByList\"\r\n                  [value]=\"sort.key\">{{sort.value}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-select role=\"list\"\r\n                multiple\r\n                [(ngModel)]=\"options.with_genres\"\r\n                placeholder=\"Gêneros\"\r\n                (selectionChange)=\"changeSelection()\">\r\n      <mat-option role=\"option\"\r\n                  *ngFor=\"let genres of genresList\"\r\n                  [value]=\"genres.id\">{{genres.name}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  @Input() pager;\r\n  @Output() changePage = new EventEmitter<number>();\r\n\r\n  constructor() {}\r\n  setPage(page: number) {\r\n    if (page <= 0) {\r\n      page = 1;\r\n    } else if (page > this.pager.totalPages) {\r\n      return;\r\n    }\r\n    this.changePage.emit(page);\r\n  }\r\n  ngOnInit() {}\r\n}\r\n","<footer class=\"container\">\r\n  <nav class=\"clearfix\">\r\n    <ul class=\"pagination\">\r\n      <li [ngClass]=\"{disabled:pager.currentPage === 1}\"\r\n          title=\"First\">\r\n        <a (click)=\"setPage(1)\">\r\n          <mat-icon>first_page</mat-icon>\r\n        </a>\r\n      </li>\r\n      <li [ngClass]=\"{disabled:pager.currentPage === 1}\"\r\n          title=\"Prev\">\r\n        <a (click)=\"setPage(pager.currentPage - 1)\">\r\n          <mat-icon>chevron_left</mat-icon>\r\n        </a>\r\n      </li>\r\n      <li>{{pager.currentPage}}</li>\r\n      <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\"\r\n          title=\"Next\">\r\n        <a (click)=\"setPage(pager.currentPage + 1)\">\r\n          <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n      </li>\r\n      <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\"\r\n          title=\"Last\">\r\n        <a (click)=\"setPage(pager.totalPages)\">\r\n          <mat-icon>last_page</mat-icon>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  <div class=\"clearfix\">\r\n    <p> Criado e Desenvolvido por\r\n      <a href=\"https://github.com/andrekings\">André Lopes</a>\r\n    </p>\r\n  </div>\r\n</footer>","import { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCommonModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatGridListModule\r\n  ],\r\n  exports: [\r\n    MatCommonModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatGridListModule\r\n  ],\r\n  providers: [],\r\n  declarations: []\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-social-share',\r\n  templateUrl: './social-share.component.html',\r\n  styleUrls: ['./social-share.component.scss'],\r\n})\r\nexport class SocialShareComponent implements OnInit {\r\n  shareUrl: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SocialShareComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    this.shareUrl = `https://github.com/andrekings/movie/${this.data.movie.id\r\n      }`;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  share(type: string) {\r\n    let href = '';\r\n    const options =\r\n      'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600';\r\n    switch (type) {\r\n      case 'facebook':\r\n        href += `https://www.facebook.com/sharer/sharer.php?u=${this.shareUrl}`;\r\n        window.open(href, '', options);\r\n        break;\r\n\r\n      case 'twitter':\r\n        href += `https://twitter.com/intent/tweet?text=${this.data.movie.original_title\r\n          }&url=${this.shareUrl}`;\r\n        window.open(href, '', options);\r\n        break;\r\n      case 'google+':\r\n        href += `https://plus.google.com/share?url=${this.shareUrl}`;\r\n        window.open(href, '', options);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  copyLink(movieId) {\r\n    const inputElement = document.getElementById('inputId');\r\n    (<any>inputElement).select();\r\n    document.execCommand('copy');\r\n    inputElement.blur();\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","<h1 matDialogTitle>Socail Share</h1>\r\n\r\n<mat-dialog-content>\r\n\r\n</mat-dialog-content>","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  placeholderImg: `http://via.placeholder.com/500x281?text=themoviedatabase`,\r\n  imgUrl: `http://image.tmdb.org/t/p/w500`,\r\n  API_BASE: 'https://api.themoviedb.org/3/',\r\n  API_KEY: 'e98136de756705459104be0a2c27f514',\r\n};\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":"webpack:///"}